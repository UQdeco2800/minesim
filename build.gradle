allprojects {
    group = 'deco2800-2015-mine'
    version = '0.2'

}

repositories {
  mavenLocal()
  maven { url 'http://deco2800-artifactory.uqcloud.net/artifactory/libs-release/' }
  //mavenCentral()
}

// Sonar configuration for our CI server
// We use sonarHostURL as a switch -- if you specify this in gradle.properties
// then Sonar is "on" and you need to set the other properties too.
apply plugin: "sonar-runner";
if (rootProject.hasProperty('sonarHostURL')) {
  sonarRunner {
    sonarProperties {
      property "sonar.projectName", project.group
      property "sonar.host.url", sonarHostURL
      property "sonar.jdbc.url", sonarDatabaseURL
      property "sonar.jdbc.driverClassName", sonarDriverClassName
      property "sonar.jdbc.username", sonarUsername
      property "sonar.jdbc.password", sonarPassword
    }
  }
}



subprojects {
    apply plugin: 'java';
    apply plugin: 'eclipse';
    apply plugin: 'idea';
    apply plugin: 'jacoco';
    apply plugin: 'checkstyle';
    apply plugin: 'application';

    checkstyle {
        toolVersion = "6.5"
        sourceSets = []
    }

    mainClassName = "minesim.MineSim"

    applicationDefaultJvmArgs = [
            "-Djavafx.animation.fullspeed=true",
    ]

    repositories {
      mavenLocal()
      maven { url 'http://deco2800-artifactory.uqcloud.net/artifactory/libs-release/' }
    }

    dependencies {
        // Logging via Log4J 2.0 using the SLF4J API
        compile group: 'org.slf4j', name:'slf4j-api', version: '1.7.12'
        compile group: 'org.slf4j', name:'slf4j-log4j12', version: '1.7.12'
        compile group: 'org.apache.derby', name: 'derby', version: '10.9.1.0'
        compile group: 'deco2800-2015-marketplace', name: 'common', version: '0.+', changing: true

        // Marketplace integration
        compile group: 'deco2800-2015-marketplace', name: 'common', version: '0.+'
        
        // Unit testing with JUnit
        testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
        testCompile group: 'junit', name: 'junit', version: '4.12', {
            exclude group: "org.hamcrest", module: "hamcrest-core"
        }
        testCompile "org.testfx:testfx-core:4.0.+"
        testCompile "org.testfx:testfx-junit:4.0+"
        testCompile "org.testfx:testfx-legacy:4.0.+", {
            exclude group: "junit", module: "junit"
        }
        testCompile group: 'org.testfx', name: 'openjfx-monocle', version: '1.8.0_20'

        // Mocking with Mockito
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.2'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.2'
  }

  tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
  }
  javadoc {
    options.tags = ['require', 'ensure']
  }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDir 'resources'
            }
        }

        test {
            java {
                srcDir 'src/test/java'
            }
            resources {
                srcDir 'resources'
            }
        }
    }
  test {
    jvmArgs = [
      "-Djava.awt.headless=true",
      "-Dtestfx.robot=glass",
      "-Dtestfx.headless=true",
      "-Dprism.order=sw",
      "-Dprism.text=t2K",
      "-Dglass.platform=Monocle",
      "-Dmonocle.platform=Headless",
      "-Dprism.verbose=true",
      "-Dprism.debugFonts=true",
      "-noverify"
    ]
  }
}
